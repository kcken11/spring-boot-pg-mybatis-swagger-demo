<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.melot.talkee.agent.mapper.AgentRelationShipMapper">
  <resultMap id="BaseResultMap" type="com.melot.talkee.agent.domain.AgentRelationShip">
    <id column="agent_id" jdbcType="INTEGER" property="agentId" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="aId" jdbcType="INTEGER" property="aId" />
    <result column="relname" jdbcType="INTEGER" property="ccname" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="cn_nickname" jdbcType="VARCHAR" property="cnNickName" />
    <result column="en_nickname" jdbcType="VARCHAR" property="enNickName" />
    <result column="parent_agent_id" jdbcType="INTEGER" property="parentAgentId" />
    <result column="parent_agent_name" jdbcType="VARCHAR" property="parentAgentName" />
    <result column="parent_channel_id" jdbcType="INTEGER" property="parentChannelId" />
  </resultMap>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    agent_id, channel_id, department_id, aId, student_id, parent_agent_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
      a.agent_id,
      a.aid as aId,
      a.channel_id,
      a.department_id,
      a.student_id,
      a.parent_agent_id,
      b.department_name,
      c.relname,
      d.cn_nickname,
      d.en_nickname,
      e.agent_name as parent_agent_name,
      f.channel_id as  parent_channel_id
    from agent_admin_rel a
    LEFT  JOIN admin_department_info b on a.department_id=b.department_id
    LEFT JOIN  admin_info c on a.aid=c.aid
    LEFT JOIN  info_user_student d on a.student_id=d.user_id
    LEFT JOIN  agent_info e  on  a.parent_agent_id=e.agent_id
    LEFT JOIN  agent_admin_rel f on  e.agent_id= f.agent_id
    where a.agent_id = #{agentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agent_admin_rel
    where agent_id = #{agentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.melot.talkee.agent.domain.AgentRelationShip">
    insert into agent_admin_rel (agent_id, channel_id, department_id, 
      aId, student_id, parent_agent_id
      )
    values (#{agentId,jdbcType=INTEGER}, #{channelId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{aId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{parentAgentId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.melot.talkee.agent.domain.AgentRelationShip">
    insert into agent_admin_rel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="aId != null">
        aId,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="parentAgentId != null">
        parent_agent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="agentId != null">
        #{agentId,jdbcType=INTEGER},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="aId != null">
        #{aId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="parentAgentId != null">
        #{parentAgentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update agent_admin_rel
    <set>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=INTEGER},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.aId != null">
        aId = #{record.aId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.parentAgentId != null">
        parent_agent_id = #{record.parentAgentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent_admin_rel
    set agent_id = #{record.agentId,jdbcType=INTEGER},
      channel_id = #{record.channelId,jdbcType=INTEGER},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      aId = #{record.aId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      parent_agent_id = #{record.parentAgentId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.melot.talkee.agent.domain.AgentRelationShip">
    update agent_admin_rel
    <set>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="aId != null">
        aId = #{aId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="parentAgentId != null">
        parent_agent_id = #{parentAgentId,jdbcType=INTEGER},
      </if>
    </set>
    where agent_id = #{agentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.melot.talkee.agent.domain.AgentRelationShip">
    update agent_admin_rel
    set channel_id = #{channelId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      aId = #{aId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      parent_agent_id = #{parentAgentId,jdbcType=INTEGER}
    where agent_id = #{agentId,jdbcType=INTEGER}
  </update>
</mapper>